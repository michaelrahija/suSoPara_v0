variable_name,
rosterRowRef,
date,
time,
response
)
#- add column for posix
temp$posix <- paste0(temp$date, " ", temp$time)
temp$posix <- as.POSIXct(temp$posix,
format = "%m/%d/%Y %H:%M:%S",
tz = "Africa/Kampala")
#- sort rows, by time, and add order column
temp <- arrange(temp, posix)
#-compute item response times
times <- c()
for(i in 1:nrow(temp)){
#if first iteration, just put 0 b/c first questions can't compute time
if(i == 1){
time.temp <- NA
} else {
time.temp <- difftime(temp$posix[i],temp$posix[i-1])
}
times <- append(times, time.temp)
}
temp$SecsSinceLastAction <- times
temp <- arrange(temp, id, actionOrder)
#########################################################
#-SUM comment set in seconds to variable response time ##
#########################################################
if("CommentSet" %in% unique(temp$action)){
#create vector of ids where there is a comment set right after answer
commentrows <- c()
for(i in 1:nrow(temp)){
if(temp$action[i] == "AnswerSet" & temp$action[i+1] == "CommentSet"){
commentrows <- append(commentrows, temp$actionOrder[i])
} else {
commentrows <- append(commentrows, FALSE)
}
}
commentrows <- commentrows[commentrows != 0]
#sum secs since last action for id'ed rows, and put NA for comments
for(i in 1:commentrows){
temp$SecsSinceLastAction[commentrows[i]] <- difftime(temp$posix[commentrows[i]+2],
temp$posix[commentrows[i]])
temp$SecsSinceLastAction[temp$action == "CommentSet"] <- NA
}
}
##NEED ALTERNATIVE APPROACH, PERHAPS ID ROWS W/ COMMENTSET AND RECORD VARIABLE
##SEARCH ROWS AND FIND THE CLOSEST ROW W/ CORRESPONDING VARIABLE NAME.
temp <- read.delim(dir,
header = FALSE,
sep = "\t",
stringsAsFactors = FALSE)
#- imported file in order of action, not all action contain time
#so later sorting doesn't work.
temp$actionOrder <- 1:nrow(temp)
#-Test to make sure correct file
#correct columns
if(length(colnames(temp)) != 9) stop("Invalid number of columns")
#- add column to id interview
interviewid <- gsub(".+/paradata/","",dir)
interviewid <- gsub(".tab","",interviewid)
source("R/extractRight.R")
interviewid <- extractRight(interviewid, n = 6)
temp$id <- rep(interviewid, times = nrow(temp))
#- clean column names
colnames(temp) <- c("action",
"user",
"role",
"date",
"time",
"variable_name",
"response",
"rosterRowRef",
"actionOrder",
"id")
#-sort in more readable way
temp <- select(temp,
id,
actionOrder,
action,
role,
user,
variable_name,
rosterRowRef,
date,
time,
response
)
#- add column for posix
temp$posix <- paste0(temp$date, " ", temp$time)
temp$posix <- as.POSIXct(temp$posix,
format = "%m/%d/%Y %H:%M:%S",
tz = "Africa/Kampala")
#- sort rows, by time, and add order column
temp <- arrange(temp, posix)
#-compute item response times
times <- c()
for(i in 1:nrow(temp)){
#if first iteration, just put 0 b/c first questions can't compute time
if(i == 1){
time.temp <- NA
} else {
time.temp <- difftime(temp$posix[i],temp$posix[i-1])
}
times <- append(times, time.temp)
}
temp$SecsSinceLastAction <- times
temp <- arrange(temp, id, actionOrder)
dir
dir = p.files[10]
dir
para
list.files(para)
wdir
list.files(wdir)
para = "C:/Users/rahija/Dropbox/suSoPara_data/uganda_para/"
setwd(wdir)
#Import paradata, add column to id interview,
#create posix column for actions
p.files <- list.files(para, pattern = ".tab")
p.files <- paste0(para,p.files)
p.files
dir = p.files[10]
dir
temp <- read.delim(dir,
header = FALSE,
sep = "\t",
stringsAsFactors = FALSE)
#- imported file in order of action, not all action contain time
#so later sorting doesn't work.
temp$actionOrder <- 1:nrow(temp)
#-Test to make sure correct file
#correct columns
if(length(colnames(temp)) != 9) stop("Invalid number of columns")
#- add column to id interview
interviewid <- gsub(".+/paradata/","",dir)
interviewid <- gsub(".tab","",interviewid)
source("R/extractRight.R")
interviewid <- extractRight(interviewid, n = 6)
temp$id <- rep(interviewid, times = nrow(temp))
#- clean column names
colnames(temp) <- c("action",
"user",
"role",
"date",
"time",
"variable_name",
"response",
"rosterRowRef",
"actionOrder",
"id")
#-sort in more readable way
temp <- select(temp,
id,
actionOrder,
action,
role,
user,
variable_name,
rosterRowRef,
date,
time,
response
)
#- add column for posix
temp$posix <- paste0(temp$date, " ", temp$time)
temp$posix <- as.POSIXct(temp$posix,
format = "%m/%d/%Y %H:%M:%S",
tz = "Africa/Kampala")
#- sort rows, by time, and add order column
temp <- arrange(temp, posix)
#-compute item response times
times <- c()
for(i in 1:nrow(temp)){
#if first iteration, just put 0 b/c first questions can't compute time
if(i == 1){
time.temp <- NA
} else {
time.temp <- difftime(temp$posix[i],temp$posix[i-1])
}
times <- append(times, time.temp)
}
temp$SecsSinceLastAction <- times
temp <- arrange(temp, id, actionOrder)
temp
temp <- read.delim(dir,
header = FALSE,
sep = "\t",
stringsAsFactors = FALSE)
#- imported file in order of action, not all action contain time
#so later sorting doesn't work.
temp$actionOrder <- 1:nrow(temp)
#-Test to make sure correct file
#correct columns
if(length(colnames(temp)) != 9) stop("Invalid number of columns")
#- add column to id interview
interviewid <- gsub(".+/paradata/","",dir)
interviewid <- gsub(".tab","",interviewid)
source("R/extractRight.R")
interviewid <- extractRight(interviewid, n = 6)
temp$id <- rep(interviewid, times = nrow(temp))
#- clean column names
colnames(temp) <- c("action",
"user",
"role",
"date",
"time",
"variable_name",
"response",
"rosterRowRef",
"actionOrder",
"id")
#-sort in more readable way
temp <- select(temp,
id,
actionOrder,
action,
role,
user,
variable_name,
rosterRowRef,
date,
time,
response
)
#- add column for posix
temp$posix <- paste0(temp$date, " ", temp$time)
temp$posix <- as.POSIXct(temp$posix,
format = "%m/%d/%Y %H:%M:%S",
tz = "Africa/Kampala")
#- sort rows, by time, and add order column
temp <- arrange(temp, posix)
head(temp)
# Create table with all actions
source("R/actionTable.R")
system.time({
#para.list <- vector(mode = "list", length = length(p.files))
para.list <- list()
for(i in 1:length(p.files)){
i
temp.df <- actionTable(dir = p.files[i])
para.list[[i]] <-  temp.df
}})
para.df <- data.table::rbindlist(para.list)
# Create table with all actions
source("R/actionTable.R")
system.time({
#para.list <- vector(mode = "list", length = length(p.files))
para.list <- list()
for(i in 1:length(p.files)){
i
temp.df <- actionTable(dir = p.files[i])
para.list[[i]] <-  temp.df
}})
para.df <- data.table::rbindlist(para.list)
i
dir = p.files[11]
dir
temp <- read.delim(dir,
header = FALSE,
sep = "\t",
stringsAsFactors = FALSE)
#- imported file in order of action, not all action contain time
#so later sorting doesn't work.
temp$actionOrder <- 1:nrow(temp)
#-Test to make sure correct file
#correct columns
if(length(colnames(temp)) != 9) stop("Invalid number of columns")
#- add column to id interview
interviewid <- gsub(".+/paradata/","",dir)
interviewid <- gsub(".tab","",interviewid)
source("R/extractRight.R")
interviewid <- extractRight(interviewid, n = 6)
temp$id <- rep(interviewid, times = nrow(temp))
#- clean column names
colnames(temp) <- c("action",
"user",
"role",
"date",
"time",
"variable_name",
"response",
"rosterRowRef",
"actionOrder",
"id")
#-sort in more readable way
temp <- select(temp,
id,
actionOrder,
action,
role,
user,
variable_name,
rosterRowRef,
date,
time,
response
)
#- add column for posix
temp$posix <- paste0(temp$date, " ", temp$time)
temp$posix <- as.POSIXct(temp$posix,
format = "%m/%d/%Y %H:%M:%S",
tz = "Africa/Kampala")
#- sort rows, by time, and add order column
temp <- arrange(temp, posix)
#-compute item response times
times <- c()
for(i in 1:nrow(temp)){
#if first iteration, just put 0 b/c first questions can't compute time
if(i == 1){
time.temp <- NA
} else {
time.temp <- difftime(temp$posix[i],temp$posix[i-1])
}
times <- append(times, time.temp)
}
temp$SecsSinceLastAction <- times
temp <- arrange(temp, id, actionOrder)
#########################################################
#-SUM comment set in seconds to variable response time ##
#########################################################
if("CommentSet" %in% unique(temp$action)){
#create vector of ids where there is a comment set right after answer
commentrows <- c()
for(i in 1:nrow(temp)){
if(temp$action[i] == "AnswerSet" & temp$action[i+1] == "CommentSet"){
commentrows <- append(commentrows, temp$actionOrder[i])
} else {
commentrows <- append(commentrows, FALSE)
}
}
commentrows <- commentrows[commentrows != 0]
#sum secs since last action for id'ed rows, and put NA for comments
for(i in 1:commentrows){
temp$SecsSinceLastAction[commentrows[i]] <- difftime(temp$posix[commentrows[i]+2],
temp$posix[commentrows[i]])
temp$SecsSinceLastAction[temp$action == "CommentSet"] <- NA
}
}
temp <- read.delim(dir,
header = FALSE,
sep = "\t",
stringsAsFactors = FALSE)
#- imported file in order of action, not all action contain time
#so later sorting doesn't work.
temp$actionOrder <- 1:nrow(temp)
#-Test to make sure correct file
#correct columns
if(length(colnames(temp)) != 9) stop("Invalid number of columns")
#- add column to id interview
interviewid <- gsub(".+/paradata/","",dir)
interviewid <- gsub(".tab","",interviewid)
source("R/extractRight.R")
interviewid <- extractRight(interviewid, n = 6)
temp$id <- rep(interviewid, times = nrow(temp))
#- clean column names
colnames(temp) <- c("action",
"user",
"role",
"date",
"time",
"variable_name",
"response",
"rosterRowRef",
"actionOrder",
"id")
#-sort in more readable way
temp <- select(temp,
id,
actionOrder,
action,
role,
user,
variable_name,
rosterRowRef,
date,
time,
response
)
#- add column for posix
temp$posix <- paste0(temp$date, " ", temp$time)
temp$posix <- as.POSIXct(temp$posix,
format = "%m/%d/%Y %H:%M:%S",
tz = "Africa/Kampala")
#- sort rows, by time, and add order column
temp <- arrange(temp, posix)
#-compute item response times
times <- c()
for(i in 1:nrow(temp)){
#if first iteration, just put 0 b/c first questions can't compute time
if(i == 1){
time.temp <- NA
} else {
time.temp <- difftime(temp$posix[i],temp$posix[i-1])
}
times <- append(times, time.temp)
}
temp$SecsSinceLastAction <- times
temp <- arrange(temp, id, actionOrder)
View(temp)
if("CommentSet" %in% unique(temp$action)){
#create vector of ids where there is a comment set right after answer
commentrows <- c()
for(i in 1:nrow(temp)){
if(temp$action[i] == "AnswerSet" & temp$action[i+1] == "CommentSet"){
commentrows <- append(commentrows, temp$actionOrder[i])
} else {
commentrows <- append(commentrows, FALSE)
}
}
commentrows <- commentrows[commentrows != 0]
if("CommentSet" %in% unique(temp$action)){
#create vector of ids where there is a comment set right after answer
commentrows <- c()
for(i in 1:nrow(temp)){
if(temp$action[i] == "AnswerSet" & temp$action[i+1] == "CommentSet"){
commentrows <- append(commentrows, temp$actionOrder[i])
} else {
commentrows <- append(commentrows, FALSE)
}
}
commentrows <- commentrows[commentrows != 0]
#sum secs since last action for id'ed rows, and put NA for comments
for(i in 1:commentrows){
temp$SecsSinceLastAction[commentrows[i]] <- difftime(temp$posix[commentrows[i]+2],
temp$posix[commentrows[i]])
temp$SecsSinceLastAction[temp$action == "CommentSet"] <- NA
}
}
commentrows
is.na(commentrows)
commentrows == logical(0)
str(commentrows)
commentrows > 1
sum(commentrows) > 1
comment.df <- filter(temp, action == "CommentSet")
View(comment.df)
rowids <- unique(comment.df$actionOrder)
rowids
which(temp$actionOrder == rowids)
rowids
dir = p.files[15]
temp <- read.delim(dir,
header = FALSE,
sep = "\t",
stringsAsFactors = FALSE)
#- imported file in order of action, not all action contain time
#so later sorting doesn't work.
temp$actionOrder <- 1:nrow(temp)
#-Test to make sure correct file
#correct columns
if(length(colnames(temp)) != 9) stop("Invalid number of columns")
#- add column to id interview
interviewid <- gsub(".+/paradata/","",dir)
interviewid <- gsub(".tab","",interviewid)
source("R/extractRight.R")
interviewid <- extractRight(interviewid, n = 6)
temp$id <- rep(interviewid, times = nrow(temp))
#- clean column names
colnames(temp) <- c("action",
"user",
"role",
"date",
"time",
"variable_name",
"response",
"rosterRowRef",
"actionOrder",
"id")
#-sort in more readable way
temp <- select(temp,
id,
actionOrder,
action,
role,
user,
variable_name,
rosterRowRef,
date,
time,
response
)
#- add column for posix
temp$posix <- paste0(temp$date, " ", temp$time)
temp$posix <- as.POSIXct(temp$posix,
format = "%m/%d/%Y %H:%M:%S",
tz = "Africa/Kampala")
#- sort rows, by time, and add order column
temp <- arrange(temp, posix)
#-compute item response times
times <- c()
for(i in 1:nrow(temp)){
#if first iteration, just put 0 b/c first questions can't compute time
if(i == 1){
time.temp <- NA
} else {
time.temp <- difftime(temp$posix[i],temp$posix[i-1])
}
times <- append(times, time.temp)
}
temp$SecsSinceLastAction <- times
temp <- arrange(temp, id, actionOrder)
comment.df <- filter(temp, action == "CommentSet")
comment.df <- filter(temp, action == "CommentSet")
rowids <- unique(comment.df$actionOrder)
which(temp$actionOrder == rowids)
comment.df <- filter(temp, action == "CommentSet")
rowids <- unique(comment.df$actionOrder)
rowids
which(temp$actionOrder == rowids)
rowids
